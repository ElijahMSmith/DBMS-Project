/* eslint-disable jsx-a11y/img-redundant-alt */
import { Box, Modal, Typography } from '@mui/material';
import { Fragment, useEffect, useState } from 'react';
import axios from 'axios';

const CREATE = 1;
const EDIT = 2;
const VIEW = 3;

const style = {
    position: 'absolute',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -50%)',
    width: 1000,
    bgcolor: 'background.paper',
    border: '2px solid #000',
    boxShadow: 24,
    p: 4,
};

const RSOmodal = (props) => {
    const { mode, rso, updateRSO, open, setModalOpen, allUniversities } = props;

    // Fixed fields, not editable by user
    // Generated by server if empty
    const rsoid = rso ? rso.rsoid : '';
    const uname = rso ? rso.uname : '';
    const uid = rso ? rso.uid : '';
    const unid = rso ? rso.unid : '';

    const oldRSO = rso;

    // Editable by user, if that is the mode.
    const [name, setName] = useState(rso ? rso.name : '');
    const [description, setDescription] = useState(rso ? rso.description : '');
    const [numMembers, setNumMembers] = useState(rso ? rso.numMembers : 0);

    // If creating, will have to select a university.
    // Not changeable in edit mode.
    const [university, setUniversity] = useState(null);

    // Not changeable, retrieved by the server
    const [owner, setOwner] = useState(null);
    const [photoUrl, setPhotoUrl] = useState('');

    const buildNewRSO = () => {
        // TODO - turn all fields into a new RSO object
        if (mode === EDIT) {
        } else if (mode === CREATE) {
        } // Not applicable for viewing
    };

    const getOwner = () => {
        if (uid === '') return;
        axios
            .get(`http://localhost:1433/auth/find/?uid=${uid}`)
            .then((res) => {
                setOwner(res.data);
            })
            .catch((err) => console.error(err));
    };

    const getFirstPicture = () => {
        if (unid === '') return;
        axios
            .get(`http://localhost:1433/universities/?unid=${unid}`)
            .then((res) => {
                console.log(res);
                const photos = res.data.photos;

                if (photos.length > 0) setPhotoUrl(photos[0]);
                else setPhotoUrl('');
            })
            .catch((err) => console.error(err));
    };

    useEffect(() => {
        setName(rso ? rso.name : '');
        setDescription(rso ? rso.description : '');
        setNumMembers(rso ? rso.numMembers : 0);
        getOwner();
        getFirstPicture();
    }, [open]);

    return (
        <Modal open={open} onClose={() => setModalOpen(false)}>
            <Box
                sx={style}
                component="form"
                autoComplete="off"
                onSubmit={(e) => e.preventDefault()}
            >
                {mode === VIEW ? (
                    <Fragment>
                        <Typography
                            variant="h4"
                            sx={{ textAlign: 'center', my: 3 }}
                        >
                            {name}
                        </Typography>
                        <Box
                            sx={{
                                height: '100%',
                                width: '100%',
                                display: 'flex',
                            }}
                        >
                            <Box sx={{ width: '50%' }}>
                                <Typography sx={{ my: 1 }}>
                                    <u>Description</u>: {description}
                                </Typography>
                                <Typography sx={{ my: 1 }}>
                                    <u>Location</u>: {uname}
                                </Typography>
                                <Typography sx={{ my: 1 }}>
                                    <u>Member Count</u>: {numMembers}
                                </Typography>
                                <Typography sx={{ my: 1 }}>
                                    Owner:{' '}
                                    {owner
                                        ? owner.username +
                                          ' (' +
                                          owner.email +
                                          ')'
                                        : 'Loading...'}
                                </Typography>
                            </Box>

                            <img
                                src={photoUrl}
                                alt="Photo of matching university"
                                sx={{ width: '50%', height: '100%' }}
                            />
                        </Box>
                    </Fragment>
                ) : mode === EDIT ? (
                    <h1>Edit</h1>
                ) : (
                    <h1>Create</h1>
                )}
            </Box>
        </Modal>
    );

    // TODO: call updateRSO with oldRSO (null if create) and newRSO (buildRSO)
};

export default RSOmodal;
